{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM98sUaA7T9B9YfczlfT/C3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"Sj81CBEAiWq_"},"outputs":[],"source":["from transformers import AutoProcessor\n","import torch, torchaudio\n","# import PySoundFile\n","from playsound import playsound\n","import soundfile as sf\n","from IPython.display import Audio\n","from Denoise import denoiseAudio\n","import os\n","os.environ[\"KMP_DUPLICATE_LIB_OK\"]=\"TRUE\"\n","\n","processor = AutoProcessor.from_pretrained(\"facebook/seamless-m4t-v2-large\")\n","model = torch.load(\"m4.pt\", weights_only=False)\n","\n","\n","\n","\n","def ChangeAudioLanguage(source_lang = \"eng\", target_lang=\"hin\"):\n","\n","    print(\"Change Audio Function Started ......\")\n","    # denoised_audio = denoiseAudio(input_audio)\n","    denoised_audio = denoiseAudio(\"./uploads/recording.wav\")\n","    print(\"audio Denoised\")\n","    audio_file, orig_freq = sf.read(denoised_audio)\n","    print(\"audio Read\")\n","    print(orig_freq)\n","    new_freq = model.config.sampling_rate\n","    audio_tensor = torch.tensor(audio_file).unsqueeze(dim = 0)\n","    print(\"Converted To Tensor\")\n","    audio_newFreq =  torchaudio.functional.resample(audio_tensor, orig_freq=orig_freq, new_freq=new_freq) # must be a 16 kH\n","    print(\"Frequency Changed\")\n","    audio_inputs = processor(audios=audio_newFreq, return_tensors=\"pt\", sampling_rate = new_freq)\n","    print(\"Tokenized\")\n","    audio_array_from_audio = model.generate(**audio_inputs, tgt_lang=target_lang)[0].cpu().numpy().squeeze()\n","    print(\"Audio Generated\")\n","    output_audio = audio_array_from_audio\n","    converted_audio = \"./uploads/converted.wav\"\n","    sf.write(converted_audio, audio_array_from_audio, new_freq)\n","    # print(output_audio, type(output_audio))\n","    return new_freq"]}]}