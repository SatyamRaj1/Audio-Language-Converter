{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPetghdBtmrmEH1oV0H7qZ3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"KyYK--m2hL6q"},"outputs":[],"source":["//webkitURL is deprecated but nevertheless\n","URL = window.URL || window.webkitURL;\n","var gumStream;\n","//stream from getUserMedia()\n","var rec;\n","//Recorder.js object\n","var input;\n","//MediaStreamAudioSourceNode we'll be recording\n","// shim for AudioContext when it's not avb.\n","var AudioContext = window.AudioContext || window.webkitAudioContext;\n","var audioContext = new AudioContext;\n","//new audio context to help us record\n","var recordButton = document.getElementById(\"recordButton\");\n","var stopButton = document.getElementById(\"stopButton\");\n","var pauseButton = document.getElementById(\"pauseButton\");\n","var proc = document.getElementById(\"procesing\");\n","var ptx = document.getElementById(\"player_text\");\n","var pl = document.getElementById(\"player\");\n","//add events to those 3 buttons\n","recordButton.addEventListener(\"click\", startRecording);\n","stopButton.addEventListener(\"click\", stopRecording);\n","pauseButton.addEventListener(\"click\", pauseRecording);\n","// const saveButton = document.getElementById('saveButton');\n","\n","function startRecording() { console.log(\"recordButton clicked\");\n","proc.style.display = 'none';\n","ptx.style.display ='none';\n","pl.style.display ='none';\n","var au = document.getElementById('player1');\n","au.style.display='none';\n","var constraints = {\n","    audio: true,\n","    video: false\n","}\n","\n","recordButton.disabled = true;\n","stopButton.disabled = false;\n","pauseButton.disabled = false\n","\n","navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {\n","    console.log(\"getUserMedia() success, stream created, initializing Recorder.js ...\");\n","    /* assign to gumStream for later use */\n","    gumStream = stream;\n","    /* use the stream */\n","    input = audioContext.createMediaStreamSource(stream);\n","    /* Create the Recorder object and configure to record mono sound (1 channel) Recording 2 channels will double the file size */\n","    rec = new Recorder(input, {\n","        numChannels: 1\n","    })\n","    //start the recording process\n","    rec.record()\n","    console.log(\"Recording started\");\n","}).catch(function(err) {\n","    //enable the record button if getUserMedia() fails\n","    recordButton.disabled = false;\n","    stopButton.disabled = true;\n","    pauseButton.disabled = true\n","});\n","}\n","function pauseRecording() {\n","    console.log(\"pauseButton clicked rec.recording=\", rec.recording);\n","    if (rec.recording) {\n","        //pause\n","        rec.stop();\n","        pauseButton.innerHTML = \"Resume\";\n","    } else {\n","        //resume\n","        rec.record()\n","        pauseButton.innerHTML = \"Pause\";\n","    }\n","}\n","function stopRecording() {\n","    proc.style.display ='block';\n","    console.log(\"stopButton clicked\");\n","    //disable the stop button, enable the record too allow for new recordings\n","    stopButton.disabled = true;\n","    recordButton.disabled = false;\n","    pauseButton.disabled = true;\n","    //reset button just in case the recording is stopped while paused\n","    pauseButton.innerHTML = \"Pause\";\n","    //tell the recorder to stop the recording\n","    rec.stop(); //stop microphone access\n","    gumStream.getAudioTracks()[0].stop();\n","    //create the wav blob and pass it on to createDownloadLink\n","    rec.exportWAV(createDownloadLink);\n","}\n","function createDownloadLink(blob) {\n","    const filename =  'recording.wav';\n","    const formData = new FormData();\n","    const fr= document.getElementById(\"fromLanguage\").value\n","    const to = document.getElementById(\"toLanguage\").value\n","    console.log(fr,to)\n","    formData.append('audio', blob);\n","    formData.append('filename', filename);\n","    formData.append('fr', fr);\n","    formData.append('to', to);\n","    fetch('/upload', {\n","                    method: 'POST',\n","                    body: formData\n","                }).catch(error => console.error('Error:', error));\n","    var url = URL.createObjectURL(blob);\n","    var au = document.getElementById('player1');\n","    au.style.display='block';\n","    var li = document.createElement('li');\n","    var link = document.createElement('a');\n","    //add controls to the <audio> element\n","    au.controls = true;\n","    au.src = url;\n","    //link the a element to the blob\n","    link.href = url;\n","    link.download = new Date().toISOString() + '.wav';\n","    link.innerHTML = link.download;\n","\n","    setTimeout(function(){ loadAudio()},22000);\n","}\n","function loadAudio() {\n","    proc.style.display ='none';\n","    pl.style.display ='block';\n","    ptx.style.display ='block';\n","    fetch('/generate_audio')\n","        .then(response => {\n","            if (!response.ok) throw new Error(\"Network response was not ok\");\n","            return response.blob();\n","        })\n","        .then(blob => {\n","            const audioUrl = URL.createObjectURL(blob);\n","            const audioPlayer = document.getElementById('player');\n","            audioPlayer.src = audioUrl;\n","            audioPlayer.play(); // Automatically play the audio once loaded\n","        })\n","        .catch(error => {\n","            console.error('Error fetching audio:', error);\n","        });\n","}"]},{"cell_type":"markdown","source":["## background img with name 123.jpg"],"metadata":{"id":"4Hz4EtbRhqNS"}}]}